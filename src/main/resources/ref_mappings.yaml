%YAML 1.2
---

# String -> Domain Object
<domain>:
  # relation to parent: one object or an array; not required for the main domain
  parentRelation: ONE | MANY
  # the field that uniquely identifies the domain; REQUIRED
  idField: <field_name_from_field_list>
  # reference field - for sorting and detecting new and updated values
  refField: <field_name_from_field_list>
  # Where filters
  whereFilters:
    - <where_clause_value>
  # NOT YET reference field - for sorting and detecting new and updated values
#  refWhenNewField: <field_name_from_field_list>
#  refWhenUpdateField: <field_name_from_field_list>
  # List of tables, part of this domain
  tables:
    <table_name_1>:
      as: <nickname>
      primaryKeyFields:
        - <field_name_from_field_list_1>
        - <field_name_from_field_list_2>
      # Join expression if necesarry
      join:
        type: INNER | LEFT_OUTER
        parentColumns:
        - <parentTableName>.<columns1>
        childColumns:
        - <childTableName>.<columns2>
  fields:
    <field_name_1>:
      sqlExpression: <sql_expression>
      type: STRING | DATETIME | NUMBER
    ...


  # -> String
  table: <table>
  # -> List<String>
  primaryKey:
    - <pkColumnName>
  # -> Map<String, Object>
  fields:
    # -> Map<String, Map<String, String>>
    orderNumber:
      # String - String
      columnName: <columnName>
      dbType: <columnType>
    partnerCode:
    placedDate:
    status:
  linkToParent:
    childKey:
      - <columnName>
    parentKey:
      - <columnName>

  children:
# OrderDetails
    details:
      table: cpOrderDetails
      primaryKey:
        - OrderDetailsId
# Whether to create a model or not. If set to true the fields will be created in the parent
# object. Default value is false.
      noModel: true
      children:
# Order Address
        consignee:
          table: cpOrderAddress
          primaryKey:
            - addressId
